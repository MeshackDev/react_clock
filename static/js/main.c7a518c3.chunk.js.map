{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["timerId","Clock","state","today","props","clockName","window","setInterval","setState","getRandomName","Date","console","info","toUTCString","slice","_prevProps","prevState","this","debug","clearInterval","className","React","Component","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"2IAGIA,E,2EAgBSC,EAAb,4MACEC,MAAQ,CACNC,MAAO,EAAKC,MAAMD,MAClBE,UAAW,EAAKD,MAAMC,WAH1B,uDAME,WAAqB,IAAD,OAClBL,EAAUM,OAAOC,aAAY,WAC3B,EAAKC,SAAS,CAAEH,UAAW,EAAKD,MAAMK,oBACrC,MAEHT,EAAUM,OAAOC,aAAY,WAC3B,EAAKC,SAAS,CAAEL,MAAO,IAAIO,OAE3BC,QAAQC,KAAK,EAAKV,MAAMC,MAAMU,cAAcC,OAAO,IAAK,MACvD,OAfP,gCAkBE,SAAmBC,EAAmBC,GAChCA,EAAUX,YAAcY,KAAKf,MAAMG,WACrCM,QAAQO,MAAR,uBAA8BF,EAAUX,UAAxC,eAAwDY,KAAKf,MAAMG,cApBzE,kCAwBE,WACEC,OAAOa,cAAcnB,KAzBzB,oBA4BE,WACE,MAA6BiB,KAAKf,MAA1BG,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,MAEnB,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,IAGF,YAED,sBAAMe,UAAU,cAAhB,SACGjB,EAAMU,cAAcC,OAAO,IAAK,YAxC3C,GAA2BO,IAAMC,WCdjC,SAASb,IACP,IAAMc,EAAQb,KAAKc,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GASX,IAAMG,EAAb,4MACExB,MAAQ,CACNC,MAAO,IAAIO,KACXL,UAAW,UACXsB,UAAU,GAJd,4CAOE,WAAU,IAAD,OACP,EAAuCV,KAAKf,MAApCG,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,MAAOwB,EAA1B,EAA0BA,SAe1B,OAbAC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKvB,SAAS,CAAEmB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CACZmB,UAAU,EACVtB,UAAWI,SAKb,sBAAKW,UAAU,MAAf,UACE,6CAEEO,GACA,cAAC,EAAD,CACExB,MAAOA,EACPE,UAAWA,EACXI,cAAeA,WA/B3B,GAAyBY,IAAMC,WCd/BU,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.c7a518c3.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\nlet timerId: number;\n// let dateId: number;\n\ntype GetRandomName = () => string;\n\ntype Props = {\n  today: Date;\n  clockName: string;\n  getRandomName: GetRandomName;\n};\n\ntype State = {\n  clockName: string;\n  today: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: this.props.today,\n    clockName: this.props.clockName,\n  };\n\n  componentDidMount() {\n    timerId = window.setInterval(() => {\n      this.setState({ clockName: this.props.getRandomName() });\n    }, 3300);\n\n    timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.clockName !== this.state.clockName) {\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(timerId);\n  }\n\n  render() {\n    const { clockName, today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  today: Date;\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    today: new Date(),\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  render() {\n    const { clockName, today, hasClock } = this.state;\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n        clockName: getRandomName(),\n      });\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { hasClock && (\n          <Clock\n            today={today}\n            clockName={clockName}\n            getRandomName={getRandomName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}